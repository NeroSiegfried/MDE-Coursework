/**
 * generated by Xtext 2.38.0
 */
package uk.ac.kcl.inf.nerosiegfried.chessdsl.chessDSL;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Remark</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see uk.ac.kcl.inf.nerosiegfried.chessdsl.chessDSL.ChessDSLPackage#getRemark()
 * @model
 * @generated
 */
public enum Remark implements Enumerator
{
  /**
   * The '<em><b>Good</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GOOD_VALUE
   * @generated
   * @ordered
   */
  GOOD(0, "Good", "Good"),

  /**
   * The '<em><b>Bad</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BAD_VALUE
   * @generated
   * @ordered
   */
  BAD(1, "Bad", "Bad"),

  /**
   * The '<em><b>Excellent</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EXCELLENT_VALUE
   * @generated
   * @ordered
   */
  EXCELLENT(2, "Excellent", "Excellent"),

  /**
   * The '<em><b>Risky</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RISKY_VALUE
   * @generated
   * @ordered
   */
  RISKY(3, "Risky", "Risky"),

  /**
   * The '<em><b>Dubious</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DUBIOUS_VALUE
   * @generated
   * @ordered
   */
  DUBIOUS(4, "Dubious", "Dubious"),

  /**
   * The '<em><b>Check</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHECK_VALUE
   * @generated
   * @ordered
   */
  CHECK(5, "Check", "Check"),

  /**
   * The '<em><b>Checkmate</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHECKMATE_VALUE
   * @generated
   * @ordered
   */
  CHECKMATE(6, "Checkmate", "Checkmate");

  /**
   * The '<em><b>Good</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GOOD
   * @model name="Good"
   * @generated
   * @ordered
   */
  public static final int GOOD_VALUE = 0;

  /**
   * The '<em><b>Bad</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BAD
   * @model name="Bad"
   * @generated
   * @ordered
   */
  public static final int BAD_VALUE = 1;

  /**
   * The '<em><b>Excellent</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EXCELLENT
   * @model name="Excellent"
   * @generated
   * @ordered
   */
  public static final int EXCELLENT_VALUE = 2;

  /**
   * The '<em><b>Risky</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RISKY
   * @model name="Risky"
   * @generated
   * @ordered
   */
  public static final int RISKY_VALUE = 3;

  /**
   * The '<em><b>Dubious</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DUBIOUS
   * @model name="Dubious"
   * @generated
   * @ordered
   */
  public static final int DUBIOUS_VALUE = 4;

  /**
   * The '<em><b>Check</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHECK
   * @model name="Check"
   * @generated
   * @ordered
   */
  public static final int CHECK_VALUE = 5;

  /**
   * The '<em><b>Checkmate</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHECKMATE
   * @model name="Checkmate"
   * @generated
   * @ordered
   */
  public static final int CHECKMATE_VALUE = 6;

  /**
   * An array of all the '<em><b>Remark</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Remark[] VALUES_ARRAY =
    new Remark[]
    {
      GOOD,
      BAD,
      EXCELLENT,
      RISKY,
      DUBIOUS,
      CHECK,
      CHECKMATE,
    };

  /**
   * A public read-only list of all the '<em><b>Remark</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Remark> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Remark</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Remark get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Remark result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Remark</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Remark getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Remark result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Remark</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Remark get(int value)
  {
    switch (value)
    {
      case GOOD_VALUE: return GOOD;
      case BAD_VALUE: return BAD;
      case EXCELLENT_VALUE: return EXCELLENT;
      case RISKY_VALUE: return RISKY;
      case DUBIOUS_VALUE: return DUBIOUS;
      case CHECK_VALUE: return CHECK;
      case CHECKMATE_VALUE: return CHECKMATE;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Remark(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Remark
